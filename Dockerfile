FROM    jimgh7/verilog-sim:1.0
ADD     file:a5ec219cbfc4e0c31e7df48cc51abd9a5b92754e15403b2ab726e25042041680   in      /
CMD     ["bash"]
RUN     /bin/sh -c apt-get update && apt-get install -y \
        --no-install-recommends \
        ca-certificates \
        curl \
        netbase \
        wget \
        && rm -rf /var/lib/apt/lists/*
RUN     /bin/sh -c set -ex;         if ! command -v gpg > /dev/null; then           apt-get update;                 apt-get install -y --no-install-recommends                      gnupg                   dirmngr            ;                rm -rf /var/lib/apt/lists/*;    fi
RUN     /bin/sh -c apt-get update && apt-get install -y \
        --no-install-recommends \
        git \
        mercurial \
        openssh-client \
        subversion \
        procps \
        && rm -rf /var/lib/apt/lists/*
RUN     /bin/sh -c set -ex;         apt-get update;             apt-get install -y --no-install-recommends                  autoconf                    automake                    bzip2                       dpkg-dev                    file                        g++ gcc                     imagemagick                 libbz2-dev                  libc6-dev                   libcurl4-openssl-dev        libdb-dev                   libevent-dev                libffi-dev                  libgdbm-dev                 libglib2.0-dev              libgmp-dev                  libjpeg-dev                 libkrb5-dev                 liblzma-dev                 libmagickcore-dev           libmagickwand-dev           libmaxminddb-dev            libncurses5-dev             libncursesw5-dev            libpng-dev                  libpq-dev                   libreadline-dev             libsqlite3-dev          libssl-dev              libtool                     libwebp-dev libxml2-dev             libxslt-dev             libyaml-dev             make            patch           unzip           xz-utils                zlib1g-dev                                  $(if apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then     echo 'default-libmysqlclient-dev';     else     echo 'libmysqlclient-dev'; fi)       ;           rm -rf /var/lib/apt/lists/*
RUN     /bin/sh -c set -ex;         if ! command -v gpg > /dev/null; then           apt-get update;                 apt-get install -y --no-install-recommends                      gnupg                   dirmngr            ;                rm -rf /var/lib/apt/lists/*;    fi
ENV     GPG_KEYS        B215C1633BCA0477615F1B35A5B3A004745C015A,B3C42148A44E6983B3E4CC0793FA9B1AB75C61B8,90AA470469D3965A87A5DCB494D03953902C9419,80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C,7F74F97C103468EE5D750B583AB00996FC26A641,33C235A34C46AA3FFB293709A328C3A2C3C45C06
RUN     /bin/sh -c set -ex;         for key in $GPG_KEYS; do                gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key";  done
ENV     GCC_MIRRORS     https://ftpmirror.gnu.org/gcc,https://bigsearcher.com/mirrors/gcc/releases,https://mirrors-usa.go-parts.com/gcc/releases,https://mirrors.concertpass.com/gcc/releases,http://www.netgull.com/gcc/releases
ENV     GCC_VERSION     9.2.0
RUN     /bin/sh -c set -ex;                 savedAptMark="$(apt-mark showmanual)";  apt-get update;         apt-get install -y --no-install-recommends              dpkg-dev                flex    ;       rm -r /var/lib/apt/lists/*;                 _fetch() {              local fetch="$1"; shift;                local file="$1"; shift;                 for mirror in $GCC_MIRRORS; do                  if curl -fL "$mirror/$fetch" -o "$file"; then                               return 0;                       fi;             done;           echo >&2 "error: failed to download '$fetch' from several mirrors";             return 1;       };              _fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig" 'gcc.tar.xz.sig'              || _fetch "$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig";   _fetch "gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz" 'gcc.tar.xz'          || _fetch "$GCC_VERSION/gcc-$GCC_VERSION.tar.xz" 'gcc.tar.xz';      gpg --batch --verify gcc.tar.xz.sig gcc.tar.xz;         mkdir -p /usr/src/gcc;  tar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1;        rm gcc.tar.xz*;            cd /usr/src/gcc;                 ./contrib/download_prerequisites;       { rm *.tar.* || true; };                for f in config.guess config.sub; do            wget -O "$f" "https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb";           find -mindepth 2 -name "$f" -exec cp -v "$f" '{}' ';';  done;           dir="$(mktemp -d)";     cd "$dir";              extraConfigureArgs='';  dpkgArch="$(dpkg --print-architecture)";    case "$dpkgArch" in             armel)                  extraConfigureArgs="$extraConfigureArgs --with-arch=armv4t --with-float=soft"                   ;;              armhf)             extraConfigureArgs="$extraConfigureArgs --with-arch=armv7-a --with-float=hard --with-fpu=vfpv3-d16 --with-mode=thumb"                    ;;                              i386)                   osVersionID="$(set -e; . /etc/os-release; echo "$VERSION_ID")";                     case "$osVersionID" in                          8) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i586" ;;                              *) extraConfigureArgs="$extraConfigureArgs --with-arch-32=i686" ;;                  esac;                   ;;      esac;           gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)";      /usr/src/gcc/configure          --build="$gnuArch"          --disable-multilib              --enable-languages=c,c++,fortran,go             $extraConfigureArgs     ;       make -j "$(nproc)";     make install-strip;             cd ..;          rm -rf "$dir" /usr/src/gcc;                 apt-mark auto '.*' > /dev/null;         [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark;        apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false
RUN     /bin/sh -c set -ex;         echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf;   ldconfig -v
RUN     /bin/sh -c set -ex;         dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc;   dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++;   dpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran;     update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999
RUN     /bin/sh -c apt-get update \
        && apt-get -y install iverilog